{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setValue } from \"../redux/user\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction Login() {\n  var dispatch = useDispatch();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var storeData = function storeData(value) {\n    return _regeneratorRuntime.async(function storeData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('@storage_Key', value));\n\n          case 3:\n            _context.next = 7;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  function handleLogIn() {\n    fetch(\"http://10.129.2.181:3000/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        username: username,\n        password: password\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      storeData(data.token);\n      dispatch(setValue(data.user));\n    });\n  }\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(LinearGradient, {\n      colors: [\"rgba(176,30,137,1)\", \" rgba(208,49,85,1)\"],\n      style: styles.background\n    }), _jsxs(View, {\n      style: styles.loginView,\n      children: [_jsx(Image, {\n        style: styles.InstagramText,\n        source: {\n          uri: 'https://www.pngkey.com/png/full/28-287308_instagram-logo-text-white.png'\n        }\n      }), _jsx(TextInput, {\n        style: styles.input,\n        onChangeText: setUsername,\n        value: username,\n        placeholder: \"Username\",\n        placeholderTextColor: \"rgba(255, 255, 255, 0.5)\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        onChangeText: setPassword,\n        value: password,\n        placeholder: \"Password\",\n        placeholderTextColor: \"rgba(255, 255, 255, 0.5)\",\n        secureTextEntry: true\n      }), _jsx(TouchableOpacity, {\n        style: styles.loginButton,\n        onPress: function onPress() {\n          return handleLogIn();\n        },\n        children: _jsx(Text, {\n          style: styles.centerText,\n          children: \"Log In\"\n        })\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: styles.signUpButton,\n      children: _jsx(Text, {\n        style: styles.centerText,\n        children: \"Dont't have an account? Sign Up.\"\n      })\n    })]\n  });\n}\n\nvar styles = StyleSheet.create({\n  mainView: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  loginView: {\n    width: Dimensions.get('window').width,\n    height: Dimensions.get('window').height,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginTop: 'auto',\n    marginBottom: 'auto',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  input: {\n    marginBottom: 20,\n    width: \"90%\",\n    height: \"7.5%\",\n    borderRadius: 5,\n    paddingLeft: 20,\n    backgroundColor: \"rgba(255, 255, 255, 0.2)\",\n    color: \"#fff\"\n  },\n  loginButton: {\n    width: \"90%\",\n    height: \"7.5%\",\n    borderRadius: 5,\n    textAlign: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 2,\n    borderColor: 'rgba(255,255,255,0.2)'\n  },\n  signUpButton: {\n    marginTop: 'auto',\n    marginBottom: 0,\n    width: Dimensions.get('window').width + 5,\n    height: Dimensions.get('window').height * 0.075,\n    borderRadius: 5,\n    textAlign: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 2,\n    borderColor: 'rgba(255,255,255,0.2)',\n    backgroundColor: \"rgba(255, 255, 255, 0.1)\"\n  },\n  InstagramText: {\n    width: 300,\n    height: 90,\n    marginBottom: 20,\n    marg: marg\n  },\n  centerText: {\n    textAlign: 'center',\n    color: \"white\"\n  },\n  background: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    height: Dimensions.get('window').height\n  }\n});\nexport default Login;","map":{"version":3,"sources":["/home/mohamed/code/labs/projects/Gram/front-end/instagram/screens/Login.js"],"names":["React","useState","LinearGradient","AsyncStorage","useSelector","useDispatch","setValue","Login","dispatch","username","setUsername","password","setPassword","storeData","value","setItem","handleLogIn","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","data","token","user","styles","background","loginView","InstagramText","uri","input","loginButton","centerText","signUpButton","StyleSheet","create","mainView","flex","justifyContent","alignItems","width","Dimensions","get","height","marginLeft","marginRight","marginTop","marginBottom","display","flexDirection","borderRadius","paddingLeft","backgroundColor","color","textAlign","borderWidth","borderColor","marg","position","left","right","top"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { Text, View,StyleSheet, TextInput, TouchableOpacity,Image} from 'react-native';\nimport { Dimensions } from 'react-native'\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setValue } from \"../redux/user\";\n\nfunction Login() {\n    const dispatch = useDispatch();\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const storeData = async (value) => {\n        try {\n          await AsyncStorage.setItem('@storage_Key', value)\n        } catch (e) {\n          // saving error\n        }\n      }\n    function handleLogIn(){\n        // console.log(\"login\")\n        fetch(\"http://10.129.2.181:3000/login\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n          },\n          body: JSON.stringify({\n            username,\n            password,\n          }),\n        })\n          .then((response) => response.json())\n          .then((data) => {\n              // console.log(\"logged in\", data.token)\n            storeData(data.token)\n            dispatch(setValue(data.user));\n          });\n    }\n    \n  return (\n      <>\n      <LinearGradient\n        // Background Linear Gradient\n        colors={[\"rgba(176,30,137,1)\", \" rgba(208,49,85,1)\"]}\n        style={styles.background}\n      />\n    <View style={styles.loginView}>\n      <Image style={styles.InstagramText} source={{uri: 'https://www.pngkey.com/png/full/28-287308_instagram-logo-text-white.png'}}></Image>\n      <TextInput\n        style={styles.input}\n        onChangeText={setUsername}\n        value={username}\n        placeholder=\"Username\"\n        placeholderTextColor=\"rgba(255, 255, 255, 0.5)\"\n      />\n      <TextInput\n        style={styles.input}\n        onChangeText={setPassword}\n        value={password}\n        placeholder=\"Password\"\n        placeholderTextColor=\"rgba(255, 255, 255, 0.5)\"\n        secureTextEntry={true}\n      />\n      <TouchableOpacity style={styles.loginButton} onPress={()=>handleLogIn()}>\n        <Text style={styles.centerText}>Log In</Text>\n      </TouchableOpacity>\n    </View>\n    <TouchableOpacity style={styles.signUpButton}>\n        <Text style={styles.centerText}>Dont't have an account? Sign Up.</Text>\n      </TouchableOpacity>\n      </>\n  );\n}\nconst styles = StyleSheet.create({\n    mainView:{\n        flex: 1, \n        justifyContent: 'center', \n        alignItems: 'center'\n    },\n    loginView:{\n        width: Dimensions.get('window').width,\n        height: Dimensions.get('window').height,\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        marginTop: 'auto',\n        marginBottom: 'auto',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center', justifyContent: 'center',\n        \n        // backgrounColor: rgb(176,30,137);\n        // background: linear-gradient(90deg, rgba(176,30,137,1) 0%, rgba(208,49,85,1) 100%);\n    },\n    input:{\n        marginBottom: 20,\n        width: \"90%\",\n        height: \"7.5%\",\n        borderRadius: 5,\n        paddingLeft: 20,\n        backgroundColor: \"rgba(255, 255, 255, 0.2)\",\n        color: \"#fff\"\n    },\n    loginButton:{\n        width: \"90%\",\n        height: \"7.5%\",\n        borderRadius: 5,\n        textAlign: 'center',\n        alignItems: 'center',justifyContent: 'center',\n        borderWidth: 2,\n        borderColor: 'rgba(255,255,255,0.2)'\n    },\n    signUpButton:{\n        marginTop: 'auto',\n        marginBottom: 0,\n        width: Dimensions.get('window').width+5,\n        height: Dimensions.get('window').height *0.075,\n        borderRadius: 5,\n        textAlign: 'center',\n        alignItems: 'center',justifyContent: 'center',\n        borderWidth: 2,\n        borderColor: 'rgba(255,255,255,0.2)',\n        backgroundColor: \"rgba(255, 255, 255, 0.1)\"\n    },\n    InstagramText:{\n        // fontSize: 36,\n        // marginBottom: 30,\n        // color: \"white\",\n        width:300, height: 90,\n        marginBottom:20,\n        marg\n    },\n    centerText:{\n        textAlign: 'center',\n        color: \"white\",\n    },\n    background: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        top: 0,\n        height: Dimensions.get('window').height,\n      },\n})\nexport default Login"]},"metadata":{},"sourceType":"module"}