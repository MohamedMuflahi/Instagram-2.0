{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport PostCard from \"../components/PostCard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar wait = function wait(timeout) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, timeout);\n  });\n};\n\nfunction Home() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      feedArray = _useState2[0],\n      setFeedArray = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      refreshing = _useState4[0],\n      setRefreshing = _useState4[1];\n\n  var onRefresh = React.useCallback(function () {\n    setRefreshing(true);\n    wait(2000).then(function () {\n      return setRefreshing(false);\n    });\n  }, []);\n  useEffect(function () {\n    fetch(\"http://10.129.2.181:3000/feed\").then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      console.log(data);\n      setFeedArray(data);\n    });\n  }, []);\n  return _jsx(FlatList, {\n    style: styles.list,\n    data: feedArray,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return _jsx(PostCard, {\n        item: item\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    refreshControl: _jsx(RefreshControl, {\n      refreshing: refreshing,\n      onRefresh: onRefresh\n    })\n  });\n}\n\nvar styles = StyleSheet.create({\n  mainView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});\nexport default Home;","map":{"version":3,"sources":["/home/mohamed/code/labs/projects/Gram/front-end/instagram/screens/Home.js"],"names":["React","useState","useEffect","PostCard","wait","timeout","Promise","resolve","setTimeout","Home","feedArray","setFeedArray","refreshing","setRefreshing","onRefresh","useCallback","then","fetch","response","json","data","console","log","styles","list","item","id","StyleSheet","create","mainView","flex","justifyContent","alignItems"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;AAEA,OAAOC,QAAP;;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,OAAO,EAAI;AACpB,SAAO,IAAIC,OAAJ,CAAY,UAAAC,OAAO;AAAA,WAAIC,UAAU,CAACD,OAAD,EAAUF,OAAV,CAAd;AAAA,GAAnB,CAAP;AACD,CAFH;;AAGA,SAASI,IAAT,GAAgB;AACd,kBAAkCR,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAOS,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAAoCV,QAAQ,CAAC,KAAD,CAA5C;AAAA;AAAA,MAAOW,UAAP;AAAA,MAAmBC,aAAnB;;AACA,MAAMC,SAAS,GAAGd,KAAK,CAACe,WAAN,CAAkB,YAAM;AAExCF,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAT,IAAAA,IAAI,CAAC,IAAD,CAAJ,CAAWY,IAAX,CAAgB;AAAA,aAAMH,aAAa,CAAC,KAAD,CAAnB;AAAA,KAAhB;AACD,GAJiB,EAIf,EAJe,CAAlB;AAKAX,EAAAA,SAAS,CAAC,YAAM;AACde,IAAAA,KAAK,CAAC,+BAAD,CAAL,CACGD,IADH,CACQ,UAACE,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KADR,EAEGH,IAFH,CAEQ,UAACI,IAAD,EAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAT,MAAAA,YAAY,CAACS,IAAD,CAAZ;AACD,KALH;AAMD,GAPQ,EAON,EAPM,CAAT;AASA,SACE,KAAC,QAAD;AACE,IAAA,KAAK,EAAEG,MAAM,CAACC,IADhB;AAEE,IAAA,IAAI,EAAEd,SAFR;AAGE,IAAA,UAAU,EAAE;AAAA,UAAGe,IAAH,QAAGA,IAAH;AAAA,aAAc,KAAC,QAAD;AAAU,QAAA,IAAI,EAAEA;AAAhB,QAAd;AAAA,KAHd;AAIE,IAAA,YAAY,EAAE,sBAACA,IAAD;AAAA,aAAUA,IAAI,CAACC,EAAf;AAAA,KAJhB;AAKE,IAAA,cAAc,EAAE,KAAC,cAAD;AAAgB,MAAA,UAAU,EAAEd,UAA5B;AAAwC,MAAA,SAAS,EAAEE;AAAnD;AALlB,IADF;AASD;;AACD,IAAMS,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAE,CADE;AAERC,IAAAA,cAAc,EAAE,QAFR;AAGRC,IAAAA,UAAU,EAAE;AAHJ;AADqB,CAAlB,CAAf;AAOA,eAAevB,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { RefreshControl,StyleSheet, FlatList } from \"react-native\";\nimport PostCard from \"../components/PostCard\";\nconst wait = timeout => {\n    return new Promise(resolve => setTimeout(resolve, timeout));\n  };\nfunction Home() {\n  const [feedArray, setFeedArray] = useState([]);\n  const [refreshing, setRefreshing] = useState(false);\n  const onRefresh = React.useCallback(() => {\n      // change this once i fix feed data\n    setRefreshing(true);\n    wait(2000).then(() => setRefreshing(false));\n  }, []);\n  useEffect(() => {\n    fetch(\"http://10.129.2.181:3000/feed\")\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        setFeedArray(data);\n      });\n  }, []);\n\n  return (\n    <FlatList\n      style={styles.list}\n      data={feedArray}\n      renderItem={({ item }) => <PostCard item={item}></PostCard>}\n      keyExtractor={(item) => item.id}\n      refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} />}\n    />\n  );\n}\nconst styles = StyleSheet.create({\n  mainView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}