{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Ionicons from '@expo/vector-icons/Ionicons';\nimport Home from \"./screens/Home\";\nimport Post from \"./screens/Post\";\nimport Account from \"./screens/Account\";\nimport Login from \"./screens/Login\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setValue } from \"./redux/user\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\n\nfunction PlaceHolder() {\n  var currentUser = useSelector(function (state) {\n    return state.user.value;\n  });\n\n  var _useState = useState(currentUser.id),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoggedIn = _useState2[0],\n      setIsLoggedIn = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      token = _useState4[0],\n      setToken = _useState4[1];\n\n  var getData = function getData() {\n    var value;\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@storage_Key'));\n\n          case 3:\n            value = _context.sent;\n\n            if (value !== null) {\n              setToken(value);\n              console.log(value);\n            }\n\n            _context.next = 9;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  function fetchProfile() {\n    fetch(\"http://192.168.1.7:3000/profile\", {\n      headers: {\n        Authentication: \"Bearer \" + token\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (result) {\n      console.log(result);\n    });\n  }\n\n  useEffect(function () {\n    getData();\n\n    if (token) {\n      fetchProfile();\n    }\n  }, []);\n  return _jsx(_Fragment, {\n    children: !!currentUser.id ? _jsx(NavigationContainer, {\n      children: _jsxs(Tab.Navigator, {\n        screenOptions: function screenOptions(_ref) {\n          var route = _ref.route;\n          return {\n            tabBarIcon: function tabBarIcon(_ref2) {\n              var focused = _ref2.focused,\n                  color = _ref2.color,\n                  size = _ref2.size;\n              var iconName;\n\n              if (route.name === 'Home') {\n                iconName = focused ? 'home' : 'home-outline';\n              } else if (route.name === 'Account') {\n                iconName = focused ? 'person-circle' : 'person-circle-outline';\n              } else if (route.name === 'Post') {\n                iconName = focused ? 'add-circle' : 'add-circle-outline';\n              }\n\n              return _jsx(Ionicons, {\n                name: iconName,\n                size: size,\n                color: color\n              });\n            },\n            tabBarActiveTintColor: 'tomato',\n            tabBarInactiveTintColor: 'gray'\n          };\n        },\n        children: [_jsx(Tab.Screen, {\n          name: \"Home\",\n          component: Home,\n          options: {\n            title: 'Home',\n            headerShown: false,\n            headerTransparent: true\n          }\n        }), _jsx(Tab.Screen, {\n          name: \"Post\",\n          component: Post,\n          options: {\n            title: 'Post',\n            headerShown: false,\n            headerTransparent: true\n          }\n        }), _jsx(Tab.Screen, {\n          name: \"Account\",\n          component: Account,\n          options: {\n            title: 'Account',\n            headerShown: false,\n            headerTransparent: true\n          }\n        })]\n      })\n    }) : _jsx(Login, {})\n  });\n}\n\nexport default function App() {\n  return _jsx(Provider, {\n    store: store,\n    children: _jsx(PlaceHolder, {})\n  });\n}\nvar styles = StyleSheet.create({\n  textStyle: {\n    fontSize: 40\n  }\n});","map":{"version":3,"sources":["/home/mohamed/code/labs/projects/Gram/front-end/instagram/App.js"],"names":["React","useState","useEffect","NavigationContainer","createBottomTabNavigator","Ionicons","Home","Post","Account","Login","AsyncStorage","Provider","store","useSelector","useDispatch","setValue","Tab","PlaceHolder","currentUser","state","user","value","id","isLoggedIn","setIsLoggedIn","token","setToken","getData","getItem","console","log","fetchProfile","fetch","headers","Authentication","then","response","json","result","route","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","title","headerShown","headerTransparent","App","styles","StyleSheet","create","textStyle","fontSize"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport { Text, View,StyleSheet } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Ionicons from '@expo/vector-icons/Ionicons';\nimport Home from './screens/Home'\nimport Post from './screens/Post'\nimport Account from './screens/Account'\nimport Login from './screens/Login'\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setValue } from \"./redux/user\";\nconst Tab = createBottomTabNavigator();\n\nfunction PlaceHolder(){\n  const currentUser = useSelector((state) => state.user.value);\n  const [isLoggedIn, setIsLoggedIn] = useState(currentUser.id);\n  const [token, setToken] = useState('');\n  const getData = async () => {\n    try {\n      const value = await AsyncStorage.getItem('@storage_Key')\n      if(value !== null) {\n        // value previously stored\n        setToken(value);\n        console.log(value);\n      }\n    } catch(e) {\n      // error reading value\n    }\n  }\n  function fetchProfile() {\n    \n    fetch(\"http://192.168.1.7:3000/profile\", {\n      headers: { Authentication: `Bearer ${token}` },\n    })\n      .then((response) => response.json())\n      .then((result) => {\n        console.log(result);\n      });\n  }\n  useEffect(() => {\n    getData();\n    if (token) {\n      fetchProfile();\n    }\n  }, [])\n  return(\n    <>\n      {!!currentUser.id? <NavigationContainer>\n      <Tab.Navigator\n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused, color, size }) => {\n            let iconName;\n            //console.log(color,size);\n            if (route.name === 'Home') {\n              iconName = focused\n                ? 'home'\n                : 'home-outline';\n            } else if (route.name === 'Account') {\n              iconName = focused ? 'person-circle' : 'person-circle-outline';\n            }else if (route.name === 'Post'){\n              iconName = focused ? 'add-circle' : 'add-circle-outline';\n            }\n            // You can return any component that you like here!\n            return <Ionicons name={iconName} size={size} color={color} />;\n          },\n          tabBarActiveTintColor: 'tomato',\n          tabBarInactiveTintColor: 'gray',\n        })}\n      >\n        <Tab.Screen name=\"Home\" component={Home} options={{ title: 'Home' , headerShown: false,\n    headerTransparent: true, \n        }}/>\n        <Tab.Screen name=\"Post\" component={Post} options={{ title: 'Post' , headerShown: false,\n    headerTransparent: true, \n        }}/>\n        <Tab.Screen name=\"Account\" component={Account} options={{ title: 'Account' , headerShown: false,\n    headerTransparent: true, \n        }}/>\n      </Tab.Navigator>\n    </NavigationContainer>: <Login/>}\n    </>\n  )\n}\nexport default function App() {\n  \n  return (\n    <Provider store={store}>\n      <PlaceHolder/>\n    </Provider>\n  );\n}\nconst styles = StyleSheet.create({\n  textStyle: {\n    fontSize: 40,\n  }\n})"]},"metadata":{},"sourceType":"module"}